const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');

const app = express();
const PORT = process.env.PORT || 3000;

app.use(cors());
app.use(bodyParser.json());

// In-memory mock database for energy usage records
const usageRecords = [];

// Simple AI-like optimizer function (mock)
function optimizeEnergyUsage(records) {
  // Example: Find average daily usage and suggest reducing by 10% if above threshold
  if (records.length === 0) return { message: 'No usage data available yet.' };

  const totalUsage = records.reduce((sum, record) => sum + record.usage, 0);
  const avgUsage = totalUsage / records.length;

  let suggestion = 'Your energy usage is within optimal range. Keep it up!';
  if (avgUsage > 50) {
    suggestion = 'Your average daily usage is high. Try reducing usage by turning off unused devices.';
  }

  return {
    averageDailyUsage: avgUsage.toFixed(2),
    suggestion
  };
}

// Endpoint: Submit usage data
app.post('/api/usage', (req, res) => {
  const { householdId, date, usage } = req.body;

  if (!householdId || !date || typeof usage !== 'number') {
    return res.status(400).json({ error: 'householdId, date, and usage (number) are required.' });
  }

  usageRecords.push({ householdId, date, usage });
  res.status(201).json({ message: 'Usage data recorded.' });
});

// Endpoint: Get optimization suggestion
app.get('/api/optimize/:householdId', (req, res) => {
  const { householdId } = req.params;

  const records = usageRecords.filter(r => r.householdId === householdId);
  const optimization = optimizeEnergyUsage(records);

  res.json(optimization);
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});
